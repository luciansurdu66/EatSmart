{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar db = require(\"../models/index\");\nexports.registerUser = function () {\n  var _ref = _asyncToGenerator(function* (req, res) {\n    var fullName = req.body.fullName;\n    var password = req.body.password;\n    var email = req.body.email;\n    try {\n      var user = yield db.User.create({\n        fullName: fullName,\n        password: password,\n        email: email\n      });\n      res.status(200).json({\n        user: user,\n        message: 'User created successfully'\n      });\n    } catch (err) {\n      console.log(err);\n      res.status(400).json({\n        err: err,\n        message: 'User could not be created'\n      });\n    }\n  });\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.loginUser = function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    var _req$body = req.body,\n      email = _req$body.email,\n      password = _req$body.password;\n    try {\n      var user = yield db.User.findOne({\n        where: {\n          email: email\n        }\n      });\n      if (user && user.password === password) {\n        res.status(200).json({\n          user: user,\n          message: 'User logged in successfully'\n        });\n      } else {\n        res.status(400).json({\n          err: err,\n          message: 'Incorrect email or password'\n        });\n      }\n    } catch (err) {\n      console.log(err);\n      res.status(400).json({\n        err: err,\n        message: 'Internal server error'\n      });\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexports.getUsers = function () {\n  var _ref3 = _asyncToGenerator(function* (req, res) {\n    try {\n      var users = yield db.User.findAll();\n      res.status(200).json({\n        users: users\n      });\n    } catch (err) {\n      console.log(err);\n      res.status(400).json(err);\n    }\n  });\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["db","require","exports","registerUser","_ref","_asyncToGenerator","req","res","fullName","body","password","email","user","User","create","status","json","message","err","console","log","_x","_x2","apply","arguments","loginUser","_ref2","_req$body","findOne","where","_x3","_x4","getUsers","_ref3","users","findAll","_x5","_x6"],"sources":["/Users/macbook/EatSmart/EatSmart/backend/backend-express/controllers/authController.js"],"sourcesContent":["const db = require('../models/index');\n\nexports.registerUser = async (req, res) => {\n    const fullName = req.body.fullName;\n    const password = req.body.password;\n    const email = req.body.email;\n\n    try {\n        const user = await db.User.create({fullName, password, email});\n        res.status(200).json({user, message: 'User created successfully'});\n    } catch (err) {\n        console.log(err);\n        res.status(400).json({err, message: 'User could not be created'});\n    }\n}\n\nexports.loginUser = async (req, res) => {\n    const {email, password} = req.body;\n\n    try {\n        const user = await db.User.findOne({where: {email}});\n\n        if (user && user.password === password) {\n            res.status(200).json({user, message: 'User logged in successfully'});\n        } else {\n            res.status(400).json({err, message:'Incorrect email or password'});\n        }\n    } catch (err) {\n        console.log(err);\n        res.status(400).json({err, message:'Internal server error'});\n    }\n}\n\nexports.getUsers = async (req, res) => {\n    try {\n        const users = await db.User.findAll();\n        res.status(200).json({users});\n    } catch (err) {\n        console.log(err);\n        res.status(400).json(err);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}